# k8s节点
- name: kubernetes-node-not-ready
  namespace: kubegems-monitoring
  alertType: monitor
  promqlGenerator:
    scope: system
    resource: node
    rule: statusCondition
    labelMatchers:
      - type: "="
        name: condition
        value: Ready
      - type: "="
        name: status
        value: "true"
  for: 0m
  alertLevels:
    - compareOp: "=="
      compareValue: "0"
      severity: critical
  receivers:
    - alertChannelID: 1
      interval: 10m
- name: kubernetes-memory-pressure
  namespace: kubegems-monitoring
  alertType: monitor
  promqlGenerator:
    scope: system
    resource: node
    rule: statusCondition
    labelMatchers:
      - type: "="
        name: condition
        value: MemoryPressure
      - type: "="
        name: status
        value: "true"
  for: 5m
  alertLevels:
    - compareOp: "=="
      compareValue: "1"
      severity: critical
  receivers:
    - alertChannelID: 1
      interval: 1h
- name: kubernetes-disk-pressure
  namespace: kubegems-monitoring
  alertType: monitor
  promqlGenerator:
    scope: system
    resource: node
    rule: statusCondition
    labelMatchers:
      - type: "="
        name: condition
        value: DiskPressure
      - type: "="
        name: status
        value: "true"
  for: 5m
  alertLevels:
    - compareOp: "=="
      compareValue: "1"
      severity: critical
  receivers:
    - alertChannelID: 1
      interval: 1h
- name: kubernetes-out-of-disk
  namespace: kubegems-monitoring
  alertType: monitor
  promqlGenerator:
    scope: system
    resource: node
    rule: statusCondition
    labelMatchers:
      - type: "="
        name: condition
        value: OutOfDisk
      - type: "="
        name: status
        value: "true"
  for: 5m
  alertLevels:
    - compareOp: "=="
      compareValue: "1"
      severity: critical
  receivers:
    - alertChannelID: 1
      interval: 1h
- name: kubernetes-pod-number-too-high
  namespace: kubegems-monitoring
  alertType: monitor
  promqlGenerator:
    scope: system
    resource: node
    rule: runningPodPercent
  for: 1h
  alertLevels:
    - compareOp: ">"
      compareValue: "90"
      severity: critical
  receivers:
    - alertChannelID: 1
      interval: 1h

# 系统namepace pod
- name: kubernetes-pod-crash-looping
  namespace: kubegems-monitoring
  alertType: monitor
  promqlGenerator:
    scope: containers
    resource: container
    rule: restartTimesLast5m
    labelMatchers:
      - type: "=~"
        name: namespace
        value: kubegems.*|istio-system|observability|kube-system|local-path-storage
  for: 1m
  alertLevels:
    - compareOp: ">"
      compareValue: "2"
      severity: error
  receivers:
    - alertChannelID: 1
      interval: 10m
- name: kubernetes-pod-oom-killing
  namespace: kubegems-monitoring
  alertType: monitor
  promqlGenerator:
    scope: containers
    resource: container
    rule: statusTerminatedReason
    labelMatchers:
      - type: "=~"
        name: namespace
        value: kubegems.*|istio-system|observability|kube-system|local-path-storage
      - type: "="
        name: "reason"
        value: "OOMKilled"
  for: 1m
  alertLevels:
    - compareOp: ">"
      compareValue: "0"
      severity: critical
  receivers:
    - alertChannelID: 1
      interval: 10m
- name: kubegems-pvc-usage-too-high
  namespace: kubegems-monitoring
  alertType: monitor
  promqlGenerator:
    scope: containers
    resource: pvc
    rule: volumeUsagePercent
    labelMatchers:
      - type: "=~"
        name: namespace
        value: kubegems.*|istio-system|observability|kube-system|local-path-storage"
  for: 1m
  alertLevels:
    - compareOp: ">"
      compareValue: "80"
      severity: error
    - compareOp: ">"
      compareValue: "90"
      severity: critical
  inhibitLabels: ["namespace", "persistentvolumeclaim"]
  receivers:
    - alertChannelID: 1
      interval: 10m

# 节点 host
- name: host-high-cpu-load
  namespace: kubegems-monitoring
  alertType: monitor
  promqlGenerator:
    scope: system
    resource: node
    rule: cpuUsagePercent
  for: 1m
  alertLevels:
    - compareOp: ">"
      compareValue: "80"
      severity: error
  receivers:
    - alertChannelID: 1
      interval: 10m
- name: host-high-memory-load
  namespace: kubegems-monitoring
  alertType: monitor
  promqlGenerator:
    scope: system
    resource: node
    rule: memoryUsagePercent
  for: 5m
  alertLevels:
    - compareOp: ">"
      compareValue: "90"
      severity: error
  receivers:
    - alertChannelID: 1
      interval: 10m
- name: host-unusual-disk-read-rate
  namespace: kubegems-monitoring
  alertType: monitor
  promqlGenerator:
    scope: system
    resource: node
    rule: diskReadBPS
  for: 5m
  alertLevels:
    - compareOp: ">"
      compareValue: "50 * 1024 * 1024"
      severity: error
  receivers:
    - alertChannelID: 1
      interval: 1h
- name: host-unusual-disk-write-rate
  namespace: kubegems-monitoring
  alertType: monitor
  promqlGenerator:
    scope: system
    resource: node
    rule: diskWriteBPS
  for: 5m
  alertLevels:
    - compareOp: ">"
      compareValue: "50 * 1024 * 1024"
      severity: error
  receivers:
    - alertChannelID: 1
      interval: 1h
- name: host-network-receive-errors
  namespace: kubegems-monitoring
  alertType: monitor
  promqlGenerator:
    scope: system
    resource: node
    rule: networkInErrPercent
  for: 1m
  alertLevels:
    - compareOp: ">"
      compareValue: "1"
      severity: error
  receivers:
    - alertChannelID: 1
      interval: 10m
- name: host-network-transmit-errors
  namespace: kubegems-monitoring
  alertType: monitor
  promqlGenerator:
    scope: system
    resource: node
    rule: networkOutErrPercent
  for: 1m
  alertLevels:
    - compareOp: ">"
      compareValue: "1"
      severity: error
  receivers:
    - alertChannelID: 1
      interval: 10m
- name: host-high-load5
  namespace: kubegems-monitoring
  alertType: monitor
  promqlGenerator:
    scope: system
    resource: node
    rule: load5
  for: 1m
  alertLevels:
    - compareOp: ">"
      compareValue: "gems_node_cpu_total_cores"
      severity: error
    - compareOp: ">"
      compareValue: "1.5 * gems_node_cpu_total_cores"
      severity: critical
  inhibitLabels: ["node"]
  receivers:
    - alertChannelID: 1
      interval: 1h
- name: node-no-container-metrics
  namespace: kubegems-monitoring
  alertType: monitor
  expr: count(gems_container_memory_usage_bytes)by(node)
  for: 5m
  alertLevels:
    - compareOp: "=="
      compareValue: "0"
      severity: critical
  receivers:
    - alertChannelID: 1
      interval: 10m
# 证书
- name: cert-manager-cert-expiry-soon
  namespace: kubegems-monitoring
  alertType: monitor
  promqlGenerator:
    scope: others
    resource: cert
    rule: expirationRemainTime
    labelMatchers:
      - type: "=~"
        name: namespace
        value: kubegems.*|istio-system|observability|kube-system|local-path-storage"
  for: 1h
  alertLevels:
    - compareOp: "<"
      compareValue: "7 * 24 * 60 * 60"
      severity: error
  receivers:
    - alertChannelID: 1
      interval: 12h
- name: cert-manager-cert-not-ready
  namespace: kubegems-monitoring
  alertType: monitor
  promqlGenerator:
    scope: others
    resource: cert
    rule: status
    labelMatchers:
      - type: "=~"
        name: namespace
        value: kubegems.*|istio-system|observability|kube-system|local-path-storage"
      - type: "=~"
        name: condition
        value: "False|Unknown"
  for: 0m
  alertLevels:
    - compareOp: "=="
      compareValue: "1"
      severity: error
  receivers:
    - alertChannelID: 1
      interval: 10m
# cluster
- name: cluster-high-cpu-load
  namespace: kubegems-monitoring
  alertType: monitor
  promqlGenerator:
    scope: system
    resource: cluster
    rule: cpuUsagePercent
  for: 0m
  alertLevels:
    - compareOp: ">"
      compareValue: "80"
      severity: critical
  receivers:
    - alertChannelID: 1
      interval: 10m
- name: cluster-high-memory-load
  namespace: kubegems-monitoring
  alertType: monitor
  promqlGenerator:
    scope: system
    resource: cluster
    rule: memoryUsagePercent
  for: 1m
  alertLevels:
    - compareOp: ">"
      compareValue: "90"
      severity: critical
  receivers:
    - alertChannelID: 1
      interval: 10m
- name: cluster-component-cert-expiry-soon
  namespace: kubegems-monitoring
  alertType: monitor
  promqlGenerator:
    scope: system
    resource: cluster
    rule: certExpirationRemainTime
    labelMatchers:
      - type: "="
        name: component
        value: apiserver
  for: 1h
  alertLevels:
    - compareOp: "<"
      compareValue: "7 * 24 * 60 * 60"
      severity: critical
  receivers:
    - alertChannelID: 1
      interval: 10m
# plugin
- name: gems-plugin-failed
  namespace: kubegems-monitoring
  alertType: monitor
  promqlGenerator:
    scope: others
    resource: plugin
    rule: status
    labelMatchers:
      - type: "="
        name: enabled
        value: true"
  for: 1m
  alertLevels:
    - compareOp: "=="
      compareValue: "0"
      severity: critical
  receivers:
    - alertChannelID: 1
      interval: 10m
# exporter
- name: exporter-down
  namespace: kubegems-monitoring
  alertType: monitor
  promqlGenerator:
    scope: others
    resource: exporter
    rule: status
    labelMatchers:
      - type: "=~"
        name: job
        value: alertmanager|cert-manager|kubegems-local-agent|kube-state-metrics|kubelet|apiserver"
  for: 1m
  alertLevels:
    - compareOp: "=="
      compareValue: "0"
      severity: critical
  receivers:
    - alertChannelID: 1
      interval: 1h
