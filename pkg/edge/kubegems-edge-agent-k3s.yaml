# https://docs.k3s.io/advanced#auto-deploying-manifests
apiVersion: v1
kind: Namespace
metadata:
  name: kubegems-edge
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubegems-edge-agent
  namespace: kubegems-edge
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: agent
      app.kubernetes.io/instance: kubegems-edge
      app.kubernetes.io/name: kubegems-edge
  strategy: {}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: agent
        app.kubernetes.io/instance: kubegems-edge
        app.kubernetes.io/name: kubegems-edge
    spec:
      serviceAccountName: kubegems-edge-agent
      nodeSelector: # prefer manager node
        node-role.kubernetes.io/control-plane: "true"
      hostNetwork: true # in case of cni not working
      containers:
        - name: agent
          args:
            - --edgehubaddr=edge-hub.kubegems.io
            - --manufacturefile=/app/cluster-identity
          image: registry.cn-beijing.aliyuncs.com/kubegems/kubegems-edge-agent:latest
          ports:
            - name: http
              containerPort: 8080
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          volumeMounts:
            - mountPath: /app/cluster-identity
              name: cluster-identity
              readOnly: true
      volumes:
        - name: cluster-identity
          hostPath:
            type: File
            path: /etc/os-release
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubegems-edge-agent
  namespace: kubegems-edge
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubegems-edge-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: kubegems-edge-agent
    namespace: kubegems-edge
